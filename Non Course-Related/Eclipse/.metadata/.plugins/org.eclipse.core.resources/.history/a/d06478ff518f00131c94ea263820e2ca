/*
 * DebugServer.cpp
 *
 *  Created on: Feb 6, 2014
 *      Author: jvarred
 */
#include <pthread.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdlib.h>
#include "DebugServer.h"

namespace std {

DebugServer::DebugServer() {
    // TODO Auto-generated constructor stub

}

void DebugServer::wait_for_client(){

    struct sockaddr_in sin;
    socklen_t slen = sizeof(sin);

    puts("Waiting a debug client");
    this->client_fd = accept(this->server_fd, (struct sockaddr *)&sin, &slen);
}

void DebugServer::server_init(const char *addr, unsigned short port)
{
    struct sockaddr_in sin;
    int fd, set = 1;

    printf("Starting server %s:%hu: ", addr, port);
    fflush(stdout);
    fd = socket(PF_INET, SOCK_STREAM, 0);

    sin.sin_family = AF_INET;
    sin.sin_port = htons(port);
    sin.sin_addr.s_addr = inet_addr(addr);

    if(setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &set, sizeof(set)) == -1) {
        perror("setsockopt");
        exit(-1);
    }

    if(bind(fd, (struct sockaddr *)&sin, sizeof(struct sockaddr_in)) == -1) {
        close(fd);
        perror("bind");
        exit(-1);
    }
    puts("OK");
    //listen(fd, 1);
    this->server_descriptor = fd;
}
DebugServer::~DebugServer() {
    // TODO Auto-generated destructor stub
}

} /* namespace std */
