/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * newGame.java
 *
 * Created on 06-12-2009, 12:57:20 PM
 */

package day_of_sagitarius;

import java.awt.event.MouseEvent;
import javax.swing.JButton;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import javax.swing.ImageIcon;

import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.event.ActionListener;

import java.awt.event.MouseListener;
import javax.swing.*;

/**
 *
 * @author kuroneko
 */
public class newGame extends javax.swing.JPanel {
    volatile int tamaño, posicion;
    JLabel[][] botones;
    Day_Of_SagitariusView root;
    ImageIcon verde, negro, rojo;
    String ItemSeleccionado;
    Jugador player;
    /** Creates new form newGame */
    public newGame(Day_Of_SagitariusView root, Jugador player) {
        this.player = player;
        initComponents();
        this.root = root;
        this.verde = new ImageIcon(ImageIcon.class.getResource("/Images/estrellasverde.gif"));
        this.negro = new ImageIcon(ImageIcon.class.getResource("/Images/estrellasfondo.gif"));
        this.rojo = new ImageIcon(ImageIcon.class.getResource("/Images/estrellasrojas.gif"));
        botones = new JLabel[10][10];
        this.tamaño = 0;
        this.posicion = 0;
        this.jLabel3.setText("-Ninguno-");
        this.jPanel1.setLayout(new GridLayout(10,10));
        for(int i=0;i<10;i++){
            for(int j=0;j<10;j++){
                this.botones[i][j] = new JLabel(this.negro);
                this.botones[i][j].setName("empty");
                this.jPanel1.add(this.botones[i][j]);
                this.botones[i][j].setSize(15, 15);
                //this.botones[i][j].addActionListener(new tomarGradilla(botones));
                this.botones[i][j].addMouseListener(new iluminarGradilla(this,i,j));
                this.jPanel1.add(this.botones[i][j]);
            }
        }
        this.jPanel1.setOpaque(false);
        
        this.list1.add("Carrier");
        this.list1.add("Destroyer");
        this.list1.add("Dreadnought");
        this.list1.add("Submarine");
        this.list1.add("Scout");
        this.list2.add("Horizontal");
        this.list2.add("Vertical");
        this.list3.add("MOE");
        this.list3.add("TSUNDERE");
        this.list3.add("----");
        this.list3.add("----");
        this.updateUI();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        list1 = new java.awt.List();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        list2 = new java.awt.List();
        list3 = new java.awt.List();

        setName("Form"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 231, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(day_of_sagitarius.Day_Of_SagitariusApp.class).getContext().getResourceMap(newGame.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText(resourceMap.getString("jTextArea1.text")); // NOI18N
        jTextArea1.setCaretColor(resourceMap.getColor("jTextArea1.caretColor")); // NOI18N
        jTextArea1.setName("jTextArea1"); // NOI18N
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        list1.setBackground(resourceMap.getColor("list1.background")); // NOI18N
        list1.setName("list1"); // NOI18N
        list1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list1ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(resourceMap.getColor("jLabel2.background")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setBackground(resourceMap.getColor("jLabel3.background")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        list2.setBackground(resourceMap.getColor("list2.background")); // NOI18N
        list2.setName("list2"); // NOI18N
        list2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list2ActionPerformed(evt);
            }
        });

        list3.setName("list3"); // NOI18N
        list3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(list3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(list2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1))
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(list3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(list2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int[][] neko = new int[10][10];
        for(int i=0;i<10;i++){
            for(int j=0;j<10;j++){
                if(botones[i][j].getName().equals("empty"))
                    neko[i][j]=0;
                if(botones[i][j].getName().equals("Carrier"))
                    neko[i][j]=5;
                if(botones[i][j].getName().equals("Destroyer"))
                    neko[i][j]=4;
                if(botones[i][j].getName().equals("Dreadnought"))
                    neko[i][j]=4;
                if(botones[i][j].getName().equals("Submarine"))
                    neko[i][j]=3;
                if(botones[i][j].getName().equals("Scout"))
                    neko[i][j]=2;

                System.out.print(neko[i][j] + " ");
            }
            System.out.println();
        }
        this.tamaño= 0;
        this.root.player= new Jugador(neko, this.jTextField1.getText(), this.tipo);

        this.root.connectar.setEnabled(true);
        this.root.setDefaultBackground();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void list1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list1ActionPerformed
        // TODO add your handling code here:
        String seleccionado = this.list1.getSelectedItem();
        if(seleccionado.equals("Carrier")==true){
            this.tamaño = 5;
            this.jLabel3.setText(seleccionado);
        }
        if(seleccionado.equals("Destroyer")==true){
            this.tamaño = 4;
            this.jLabel3.setText(seleccionado);
        }
        if(seleccionado.equals("Dreadnought")==true){
            this.tamaño = 4;
            this.jLabel3.setText(seleccionado);
        }
        if(seleccionado.equals("Submarine")==true){
            this.tamaño = 3;
            this.jLabel3.setText(seleccionado);
        }
        if(seleccionado.equals("Scout")==true){
            this.tamaño = 2;
            this.jLabel3.setText(seleccionado);
        }
        this.list1.remove(this.list1.getSelectedIndex());
        this.ItemSeleccionado = this.jLabel3.getText();
    }//GEN-LAST:event_list1ActionPerformed

    public void iluminarBotones(int i, int j){
        if(this.tamaño > 0){
            System.out.println("i: " +i);
            System.out.println("j: " +j);
            if(this.posicion == 0){
                if((j>=0)&&(j+this.tamaño<=10)){
                    boolean avaliable = true;
                    for(int x = j,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        if(botones[i][x].getName().equals("empty")==false){
                        System.out.println("i= " + i +"\nj= " + j);
                        System.out.println("Name= " + botones[i][x].getName());
                            avaliable = false;
                            break;
                        }
                    }
                    for(int x = j,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        botones[i][x].setIcon(this.verde);
                        System.out.println("i= " + i +"\nj= " + j);
                        System.out.println("Name= " + botones[i][x].getName());
                    }
                }
            }
            if(this.posicion == 1){
                if((i>=0)&&(i+this.tamaño<=10)){
                    boolean avaliable = true;
                    for(int x = i,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        if(botones[x][j].getName().equals("empty")==false){
                            avaliable = false;
                        System.out.println("i= " + i +"\nj= " + j);
                        System.out.println("Name= " + botones[x][j].getName());
                            break;
                        }
                    }
                    for(int x = i,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        botones[x][j].setIcon(this.verde);
                        System.out.println("i= " + i +"\nj= " + j);
                        System.out.println("Name= " + botones[x][j].getName());
                    }
                }
            }
        }
    }
    public void apagarBotones(int i, int j){
        if(this.tamaño > 0){
            System.out.println("i: " +i);
            System.out.println("j: " +j);
            if(this.posicion == 0){
                if((j>=0)&&(j+this.tamaño<=10)){
                    boolean avaliable = true;
                    for(int x = j,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        if(botones[i][x].getName().equals("empty")==false){
                            avaliable = false;
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Name= " + botones[i][x].getName());
                            break;
                        }
                    }
                    for(int x = j,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        botones[i][x].setIcon(this.negro);
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Name= " + botones[i][x].getName());
                    }
                }
            }
            if(this.posicion == 1){
                if((i>=0)&&(i+this.tamaño<=10)){
                    boolean avaliable = true;
                    for(int x = i,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        if(botones[x][j].getName().equals("empty")==false){
                            avaliable = false;
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Name= " + botones[x][j].getName());
                            break;
                        }
                    }
                    for(int x = i,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        botones[x][j].setIcon(this.negro);
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Name= " + botones[x][j].getName());
                    }
                }
            }
        }
    }


    public void cargar(int i, int j){
        if(this.tamaño > 0){
            if(this.posicion == 0){
                if((j>=0)&&(j+this.tamaño<=10)){
                    boolean avaliable = true;
                    for(int x = j,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        if(botones[i][x].getName().equals("empty")==false){
                            avaliable = false;
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Nameguard= " + botones[i][x].getName());
                            break;
                        }
                    }
                    for(int x = j,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        botones[i][x].setName(this.ItemSeleccionado);
                        botones[i][x].setIcon(this.rojo);
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Nameguard= " + botones[i][x].getName());
                    }
                    if(avaliable==true){
                        this.tamaño = 0;
                        this.jLabel3.setText("-Ninguno-");
                    }
                }
            }
            if(this.posicion == 1){
                if((i>=0)&&(i+this.tamaño<=10)){
                    boolean avaliable = true;
                    for(int x = i,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        if(botones[x][j].getName().equals("empty")==false){
                            avaliable = false;
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Nameguard= " + botones[x][j].getName());
                            break;
                        }
                    }
                    for(int x = i,count=0;(avaliable==true)&&(count<tamaño);x++,count++){
                        botones[x][j].setName(this.ItemSeleccionado);
                        botones[x][j].setIcon(this.rojo);
                        System.out.println("i= " + x +"\nj= " + j);
                        System.out.println("Nameguard= " + botones[x][j].getName());
                    }
                    if(avaliable==true){
                        this.tamaño = 0;
                        this.jLabel3.setText("-Ninguno-");
                    }
                }
            }
        }
    }


    private void list2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list2ActionPerformed
        // TODO add your handling code here:
        this.posicion = this.list2.getSelectedIndex();
    }//GEN-LAST:event_list2ActionPerformed

    private void list3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list3ActionPerformed
        // TODO add your handling code here:
        this.tipo = this.list3.getSelectedIndex();
    }//GEN-LAST:event_list3ActionPerformed

    public int tipo;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private java.awt.List list1;
    private java.awt.List list2;
    private java.awt.List list3;
    // End of variables declaration//GEN-END:variables

    public void paintComponent(Graphics g){
        Dimension tamanio = getSize();
        ImageIcon imagenFondo = this.root.imagenFondo;
        g.drawImage(imagenFondo.getImage(), 0, 0,
                tamanio.width, tamanio.height, null);
        setOpaque(false);

        super.paintComponent(g);
    }
}
