#BlueJ class context
comment0.params=lenght
comment0.target=ArrayList(int)
comment0.text=\r\n\ constructor\ del\ Arraylist\r\n\ @param\ lenght\ el\ tama\u00F1o\ inicial\r\n
comment1.params=
comment1.target=ArrayList()
comment1.text=\r\n\ Contructor\ por\ defecto\ de\ la\ clase\r\n
comment10.params=
comment10.target=boolean\ hasNext()
comment11.params=
comment11.target=java.lang.Object\ next()
comment12.params=
comment12.target=void\ remove()
comment2.params=tama\u00F1oMinimo
comment2.target=void\ asegurarEspacio(int)
comment2.text=\r\n\ Metodo\ que\ se\ encarga\ de\ asegurar\ el\ espacio\ nesesario\ para\r\n\ poder\ guardar\ arreglos,\ en\ caso\ de\ que\ el\ espacio\ solicitado\ sea\ menor\ que\ el\ espacio\r\n\ actual,\ este\ metodo\ no\ hace\ nada\r\n\ @param\ tama\u00F1oMinimo\ el\ tama\u00F1o\ solicitado\r\n
comment3.params=
comment3.target=int\ getLenght()
comment3.text=\r\n\ regresa\ la\ longitud\ del\ arreglo\r\n\ @return\ la\ longitud\ del\ arreglo\r\n
comment4.params=
comment4.target=int\ size()
comment5.params=index
comment5.target=java.lang.Object\ get(int)
comment6.params=e
comment6.target=boolean\ add(java.lang.Object)
comment7.params=index
comment7.target=java.lang.Object\ remove(int)
comment8.params=objeto
comment8.target=ArrayList\ getElement(java.lang.Object)
comment8.text=\r\n\ bastante\ parecido\ a\ un\ metodo\ de\ busqueda,\ pero\ en\ vez\ de\ devolver\ un\ elemento,\ devuelve\ un\r\n\ arraylist\ de\ elementos\ del\ mismo\ tipo\ del\ entregado.\r\n\ @param\ objeto\ la\ instancia\ de\ objeto\ a\ buscar\r\n
comment9.params=
comment9.target=java.util.Iterator\ iterator()
numComments=13
