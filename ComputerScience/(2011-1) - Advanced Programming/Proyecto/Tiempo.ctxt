#BlueJ class context
comment0.params=
comment0.target=Tiempo()
comment0.text=\r\n\ Constructor\ de\ la\ clase\ Tiempo\r\n\ \r\n\ Inicializa\ la\ matriz\ en\ valores\ falsos,\ indicando\ que\ no\ hay\ ningun\ tiempo\ ocupado.\r\n\ \r\n\ El\ sistema\ para\ incicializar\ utiliza\ los\ valores\ de\ las\ constantes\ definidas\ con\ anterioridad,\r\n\ usando\ un\ ciclo\ anidado\ tres\ veces,\ para\ recorrer\ completamente\ la\ matriz\ y\ poder\ incicializar\r\n\ los\ valores\r\n\ \r\n\ @author\ Erik\ Andres\ Regla\ Torres\r\n\ @since\ 0.1\r\n
comment1.params=
comment1.target=boolean[][][]\ getMatrix()
comment1.text=\r\n\ Getter\ de\ el\ miembro\ bloquesDisponibles.\ \r\n\ \r\n\ La\ razon\ por\ la\ cual\ no\ se\ le\ puso\ getBloquesDisponibles,\ es\ por\ que\r\n\ cuando\ se\ llama,\ lo\ que\ se\ hace\ es\ llamar\ derechamente\ a\ la\ matriz\ para\r\n\ trabajar\ con\ ella,\ no\ es\ que\ la\ queramos\ usar\ en\ alguna\ otra\r\n\ instancia.\r\n\ \r\n\ @return\r\n\ \r\n\ @author\ Erik\ Andres\ Regla\ Torres\r\n\ @since\ 0.1\r\n\ \r\n
comment2.params=matriz
comment2.target=boolean\ isDisponible(Tiempo)
comment2.text=\r\n\ Verificador\ de\ matriz.\ Se\ encarga\ de\ indicar\ si\ la\ matriz\ actual,\ tiene\ alguna\r\n\ similitud\ con\ la\ entregada\ como\ parametro,\ lo\ cual\ se\ traduce\ en\ el\ saber\r\n\ si\ existe\ tope\ horario\ entre\ el\ entregado\ y\ el\ presente\ aca.\r\n\ \r\n\ El\ metodo\ de\ operacion\ es\ igual\ al\ descrito\ previamente;\ se\ recorre\ la\ matriz\r\n\ completamente,\ regresando\ de\ forma\ inmediata\ un\ valor\ falso\ y\ saliendo\ del\r\n\ metodo\ en\ caso\ de\ encontrar\ una\ similitud.\ Caso\ contrario,\ si\ no\ haya\ ninguna\r\n\ ha\ de\ terminar\ las\ iteraciones\ y\ retornar\ un\ verdadero.\r\n\ \r\n\ @param\ matriz\ El\ tiempo\ con\ el\ que\ se\ ha\ de\ comparar\ la\ matriz\ o\ tiempo\ actual\r\n\ \r\n\ @return\ Un\ booleano\ que\ indica\ si\ la\ matriz\ es\ compatible,\ en\ otras\ palabras\ \ si\ no\ hay\ tope\ horario\r\n\ \r\n\ @author\ Erik\ Andres\ Regla\ Torres\r\n\ @since\ 0.1\r\n\ \ \r\n
comment3.params=
comment3.target=boolean\ isEmpty()
comment3.text=\r\n\ Metodo\ isEmpty,\ el\ cual\ verifica\ que\ esta\ matriz\ tenga\ algun\ espacio\r\n\ ocupado.\r\n\ \r\n\ Para\ realizar\ esta\ comprobacion\ se\ recurre\ a\ lo\ tipico;\ se\ recorre\ la\ matriz\r\n\ completa\ y\ si\ hay\ algun\ bloque\ ocupado,\ entonces\ quiere\ decir\ que\ no\r\n\ esta\ ocupada\r\n\ \r\n\ @return\ true\ si\ es\ que\ esta\ libre\r\n
comment4.params=semana\ diaBloque
comment4.target=boolean\ reservarDia(int,\ java.util.HashMap)
comment4.text=\r\n\ Metodo\ reservar\ dia,\ (aunque\ mas\ que\ reservar\ dia,\ parecer\ reservar\ semana\ ._.)\r\n\ el\ cual\ realiza\ una\ verificacion\ sobre\ la\ matriz\ y\ paralelamente\r\n\ la\ escribe,\ usando\ un\ bloque\ de\ memoria\ temporal\ para\ evitar\ 'accidentes',\ \r\n\ de\ modo\ que\ las\ modificaciones\ quedan\ almacenadas\ ahi,\ \r\n\ y\ despues\ la\ reemplazamos\ en\ la\ original\ y\ la\ borramos\r\n\ \r\n\ El\ metodo\ de\ operacion\ es\ bastante\ simple,\ y\ similar\ a\ las\ implementaciones\ anteriores,\r\n\ recorriendo\ la\ matriz\ completamente\ hasta\ que\ algo\ ocurra.\r\n\ \r\n\ @param\ semana\ Entero\ que\ describe\ la\ semana\ en\ la\ cual\ estamos\ trabajando\r\n\ @param\ diaBloque\ HashMap<Integer\ ,\ ArrayList\ <>>\r\n\ @return\ La\ indicacion\ que\ si\ la\ operacion\ pudo\ ser\ efectuada\ exitosamente\r\n\ \r\n\ @author\ Erik\ Andres\ Regla\ Torres\r\n\ @since\ 0.1\r\n
comment5.params=diaBloque
comment5.target=boolean\ reservarSemestre(java.util.HashMap)
comment5.text=\r\n\ Metodo\ reservarSemeste().\ \ ReHashMap<Integer,\ ArrayList>\ diaBloquealiza\ una\ verificacion\ de\ la\ matriz,\ al\ tiempo\ que\ guarda\ \r\n\ para\ el\ bloque\ completo\ los\ datos\ del\ dia,\ usando\ un\ bloque\ de\ memoria\r\n\ temporal\ para\ escribir\ los\ datos\ ahi,\ y\ luego\ exportarlos\ a\ la\ matriz\ original.\r\n\ \r\n\ Tiene\ un\ uso\ bastante\ similiar\ al\ del\ reservarDia(),\r\n\ pero\ con\ la\ diferencia\ que\ como\ en\ este\ caso\ el\ bloque\ representa\ un\ semestre\ completo,\r\n\ no\ nececitamos\ el\ paramtro\ de\ la\ semana\ a\ reservar,\ por\ lo\ tanto,\ aplicamos\ la\ iteracion\r\n\ a\ la\ matriz\ completa,\ pero\ bajo\ los\ mismos\ parametros.\r\n\ \r\n\ @param\ diaBloque\ HashMap<Integer\ ,\ ArrayList\ <>>\r\n\ @return\ La\ indicacion\ que\ si\ la\ operacion\ pudo\ ser\ efectuada\ exitosamente\r\n\ \r\n\ @author\ Erik\ Andres\ Regla\ Torres\r\n\ @since\ 0.1\r\n
comment6.params=semana\ diaBloque
comment6.target=boolean\ deReservarDia(int,\ java.util.HashMap)
comment6.text=\r\n\ Metodo\ deReservar\ dia,\ el\ cual,\ inicializa\ las\ posiciones\ de\ la\ matriz\r\n\ de\ modo\ que\ quedan\ marcadas\ con\ un\ valor\ el\ cual\ indica\ que\ estan\ disponibles,\r\n\ para\ una\ semana\ dada.\r\n\ \r\n\ @param\ semana\ Entero\ que\ describe\ la\ semana\ en\ la\ cual\ estamos\ trabajando\r\n\ @param\ diaBloque\ HashMap<Integer\ ,\ ArrayList\ <>>\r\n\ @return\ La\ indicacion\ que\ si\ la\ operacion\ pudo\ ser\ efectuada\ exitosamente\r\n\ \r\n\ @author\ Erik\ Andres\ Regla\ Torres\r\n\ @since\ 0.1\r\n
comment7.params=diaBloque
comment7.target=boolean\ deReservarSemestre(java.util.HashMap)
comment7.text=\r\n\ Metodo\ deReservar\ Semana,\ el\ cual,\ inicializa\ las\ posiciones\ de\ la\ matriz\r\n\ de\ modo\ que\ quedan\ marcadas\ con\ un\ valor\ el\ cual\ indica\ que\ estan\ disponibles,\r\n\ pero\ ya\ que\ una\ matriz\ guarda\ la\ informacion\ de\ un\ semestre,\ entonces\ \r\n\ reinicializa\ todos\ los\ valores\ comprendidos\ en\ el\ semestre,\ que\ concuerden\ con\ los\r\n\ entregados.\r\n\ \r\n\ @return\ La\ indicacion\ que\ si\ la\ operacion\ pudo\ ser\ efectuada\ exitosamente\r\n\ \r\n\ @author\ Erik\ Andres\ Regla\ Torres\r\n\ @since\ 0.1\r\n
numComments=8
